{"ast":null,"code":"import ansiEscapes from 'ansi-escapes';\n\n/**\n * Move cursor left by `x`\n * @param  {Readline} rl - Readline instance\n * @param  {Number}   x  - How far to go left (default to 1)\n */\n\nexport const left = function (rl, x) {\n  rl.output.write(ansiEscapes.cursorBackward(x));\n};\n\n/**\n * Move cursor right by `x`\n * @param  {Readline} rl - Readline instance\n * @param  {Number}   x  - How far to go left (default to 1)\n */\n\nexport const right = function (rl, x) {\n  rl.output.write(ansiEscapes.cursorForward(x));\n};\n\n/**\n * Move cursor up by `x`\n * @param  {Readline} rl - Readline instance\n * @param  {Number}   x  - How far to go up (default to 1)\n */\n\nexport const up = function (rl, x) {\n  rl.output.write(ansiEscapes.cursorUp(x));\n};\n\n/**\n * Move cursor down by `x`\n * @param  {Readline} rl - Readline instance\n * @param  {Number}   x  - How far to go down (default to 1)\n */\n\nexport const down = function (rl, x) {\n  rl.output.write(ansiEscapes.cursorDown(x));\n};\n\n/**\n * Clear current line\n * @param  {Readline} rl  - Readline instance\n * @param  {Number}   len - number of line to delete\n */\nexport const clearLine = function (rl, len) {\n  rl.output.write(ansiEscapes.eraseLines(len));\n};","map":{"version":3,"names":["ansiEscapes","left","rl","x","output","write","cursorBackward","right","cursorForward","up","cursorUp","down","cursorDown","clearLine","len","eraseLines"],"sources":["C:/Users/Matthew/node_modules/inquirer/lib/utils/readline.js"],"sourcesContent":["import ansiEscapes from 'ansi-escapes';\n\n/**\n * Move cursor left by `x`\n * @param  {Readline} rl - Readline instance\n * @param  {Number}   x  - How far to go left (default to 1)\n */\n\nexport const left = function (rl, x) {\n  rl.output.write(ansiEscapes.cursorBackward(x));\n};\n\n/**\n * Move cursor right by `x`\n * @param  {Readline} rl - Readline instance\n * @param  {Number}   x  - How far to go left (default to 1)\n */\n\nexport const right = function (rl, x) {\n  rl.output.write(ansiEscapes.cursorForward(x));\n};\n\n/**\n * Move cursor up by `x`\n * @param  {Readline} rl - Readline instance\n * @param  {Number}   x  - How far to go up (default to 1)\n */\n\nexport const up = function (rl, x) {\n  rl.output.write(ansiEscapes.cursorUp(x));\n};\n\n/**\n * Move cursor down by `x`\n * @param  {Readline} rl - Readline instance\n * @param  {Number}   x  - How far to go down (default to 1)\n */\n\nexport const down = function (rl, x) {\n  rl.output.write(ansiEscapes.cursorDown(x));\n};\n\n/**\n * Clear current line\n * @param  {Readline} rl  - Readline instance\n * @param  {Number}   len - number of line to delete\n */\nexport const clearLine = function (rl, len) {\n  rl.output.write(ansiEscapes.eraseLines(len));\n};\n"],"mappings":"AAAA,OAAOA,WAAW,MAAM,cAAc;;AAEtC;AACA;AACA;AACA;AACA;;AAEA,OAAO,MAAMC,IAAI,GAAG,SAAAA,CAAUC,EAAE,EAAEC,CAAC,EAAE;EACnCD,EAAE,CAACE,MAAM,CAACC,KAAK,CAACL,WAAW,CAACM,cAAc,CAACH,CAAC,CAAC,CAAC;AAChD,CAAC;;AAED;AACA;AACA;AACA;AACA;;AAEA,OAAO,MAAMI,KAAK,GAAG,SAAAA,CAAUL,EAAE,EAAEC,CAAC,EAAE;EACpCD,EAAE,CAACE,MAAM,CAACC,KAAK,CAACL,WAAW,CAACQ,aAAa,CAACL,CAAC,CAAC,CAAC;AAC/C,CAAC;;AAED;AACA;AACA;AACA;AACA;;AAEA,OAAO,MAAMM,EAAE,GAAG,SAAAA,CAAUP,EAAE,EAAEC,CAAC,EAAE;EACjCD,EAAE,CAACE,MAAM,CAACC,KAAK,CAACL,WAAW,CAACU,QAAQ,CAACP,CAAC,CAAC,CAAC;AAC1C,CAAC;;AAED;AACA;AACA;AACA;AACA;;AAEA,OAAO,MAAMQ,IAAI,GAAG,SAAAA,CAAUT,EAAE,EAAEC,CAAC,EAAE;EACnCD,EAAE,CAACE,MAAM,CAACC,KAAK,CAACL,WAAW,CAACY,UAAU,CAACT,CAAC,CAAC,CAAC;AAC5C,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA,OAAO,MAAMU,SAAS,GAAG,SAAAA,CAAUX,EAAE,EAAEY,GAAG,EAAE;EAC1CZ,EAAE,CAACE,MAAM,CAACC,KAAK,CAACL,WAAW,CAACe,UAAU,CAACD,GAAG,CAAC,CAAC;AAC9C,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}